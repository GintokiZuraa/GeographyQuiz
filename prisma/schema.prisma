generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          String       @id @unique
    profile     Profile?
    horse       Horse?
    profession  Profession?
    idleProfile IdleProfile?
    reminder    Reminder[]
}

model Profile {
    id         String @id @unique
    level      Int
    area       String
    maxArea    String
    timeTravel Int
    coolness   Int
    user       User   @relation(fields: [id], references: [id])
}

model Horse {
    id       String @id @unique
    tier     Int
    type     String
    level    Int
    epicness Int
    user     User   @relation(fields: [id], references: [id])
}

model Profession {
    id        String @id @unique
    worker    Int
    crafter   Int
    lootboxer Int
    merchant  Int
    enchanter Int
    user      User   @relation(fields: [id], references: [id])
}

model IdleProfile {
    id   String @id @unique
    pack Int
    user User   @relation(fields: [id], references: [id])
}

model IdleLeague {
    username String @id @unique
    point    Int
}

model IdleItem {
    name           String  @id @unique
    pack           Int?
    type           String?
    price          Int?
    percent        Int?
    percentHistory Json?
    note           String?
    lastUpdate     Float?
}


model Reminder {
    id        String @id @unique
    userID    String
    channelID String
    time      Float
    message   String
    user      User   @relation(fields: [userID], references: [id])
}

model VoidReminder {
    area String @id @unique
    time Float
}

model RestartChannel {
    id String @id @unique
}

model ChannelOwner {
  channelId String @id
  userId    String
}

model IdleStonk {
  name           String  @id @unique
  period         String?
  returnPercent  Float?
  riskLevel      Float?
  percentHistory Json?
  lastUpdate     Float?
}

model UserMemory {
  id        Int     @id @default(autoincrement())
  userId    String  @unique
  username  String
  memory    String  // teks custom yang bisa di-insert Oidupus
  updatedAt DateTime @updatedAt
}

model AnnouncementChannel {
  guildId   String  @id
  channelId String
}

model PlayerScore {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  
  // Category scores
  flag      Int      @default(0)
  capital   Int      @default(0)
  language  Int      @default(0)
  state     Int      @default(0)
  kabupaten Int      @default(0)
  province  Int      @default(0)
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  profile   PlayerProfiles? @relation(fields: [userId], references: [userId])

  @@map("player_scores")
}

model PlayerCurrency {
  id        Int      @id @default(autoincrement())
  userId    String   @unique
  coins     Int      @default(0)
  gems      Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  @@map("player_currency")
}

model PlayerProfiles {
  id             String   @id @default(cuid())
  userId         String   @unique
  title          String
  badges         String[]
  unlockedTitles String[]
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  score PlayerScore?
}
